{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimerMenu = void 0;\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native\");\nvar _styles = _interopRequireDefault(require(\"../pages/styles.js\"));\nvar _useInterval = _interopRequireDefault(require(\"../service/useInterval.js\"));\nvar _UserContext = _interopRequireDefault(require(\"../service/UserContext.js\"));\nvar _timeFormat = _interopRequireDefault(require(\"../service/timeFormat.js\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\OREH\\\\oreh\\\\components\\\\timer.js\";\nvar TimerMenu = function TimerMenu(_ref) {\n  var start = _ref.start;\n  var userContext = (0, _react.useContext)(_UserContext.default);\n  start && (0, _useInterval.default)(function () {\n    userContext.setTimer(function (prevTimer) {\n      return prevTimer + 1;\n    });\n  }, userContext.isEnd === false ? 1000 : null);\n  return (0, _jsxRuntime.jsx)(_reactNative.Text, {\n    style: _styles.default.timerText,\n    children: (0, _timeFormat.default)(userContext.timer)\n  });\n};\nexports.TimerMenu = TimerMenu;","map":{"version":3,"names":["TimerMenu","start","userContext","useContext","UserContext","useInterval","setTimer","prevTimer","isEnd","styles","timerText","timeFormat","timer"],"sources":["C:/Users/user/OneDrive/문서/GitHub/OREH/oreh/components/timer.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport { Text } from 'react-native'\r\nimport styles from '../pages/styles.js'\r\nimport useInterval from '../service/useInterval.js'\r\nimport UserContext from '../service/UserContext.js'\r\nimport timeFormat from '../service/timeFormat.js'\r\nexport const TimerMenu = ({ start }) => {\r\n  const userContext = useContext(UserContext)\r\n  start &&\r\n    useInterval(\r\n      () => {\r\n        userContext.setTimer((prevTimer) => prevTimer + 1)\r\n      },\r\n      userContext.isEnd === false ? 1000 : null,\r\n    )\r\n  return <Text style={styles.timerText}>{timeFormat(userContext.timer)}</Text>\r\n}\r\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAiD;AAAA;EAAA;AAC1C,IAAMA,SAAS,GAAG,SAAZA,SAAS,OAAkB;EAAA,IAAZC,KAAK,QAALA,KAAK;EAC/B,IAAMC,WAAW,GAAG,IAAAC,iBAAU,EAACC,oBAAW,CAAC;EAC3CH,KAAK,IACH,IAAAI,oBAAW,EACT,YAAM;IACJH,WAAW,CAACI,QAAQ,CAAC,UAACC,SAAS;MAAA,OAAKA,SAAS,GAAG,CAAC;IAAA,EAAC;EACpD,CAAC,EACDL,WAAW,CAACM,KAAK,KAAK,KAAK,GAAG,IAAI,GAAG,IAAI,CAC1C;EACH,OAAO,qBAAC,iBAAI;IAAC,KAAK,EAAEC,eAAM,CAACC,SAAU;IAAA,UAAE,IAAAC,mBAAU,EAACT,WAAW,CAACU,KAAK;EAAC,EAAQ;AAC9E,CAAC;AAAA"},"metadata":{},"sourceType":"script"}