{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native\");\nvar _styles = _interopRequireDefault(require(\"../pages/styles.js\"));\nvar _UserContext = _interopRequireDefault(require(\"../service/UserContext.js\"));\nvar _string = require(\"../string\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\OREH\\\\oreh\\\\components\\\\button.js\";\nvar Button = function Button(_ref) {\n  var text = _ref.text,\n    navigation = _ref.navigation,\n    viewName = _ref.viewName,\n    inputAns = _ref.inputAns,\n    ans = _ref.ans,\n    setIsWrongAns = _ref.setIsWrongAns,\n    tel = _ref.tel;\n  var userContext = (0, _react.useContext)(_UserContext.default);\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    pressed = _useState2[0],\n    setPressed = _useState2[1];\n  var EnterAns = function EnterAns() {\n    if (text === _string.STRING.quest_buttonText) {\n      if (ans === inputAns.trim()) {\n        userContext.setRecordList([].concat((0, _toConsumableArray2.default)(userContext.recordList), [userContext.timer]));\n        if (tel) {\n          _reactNative.Linking.openURL(\"tel:07045717849\");\n        }\n        navigation.navigate(viewName);\n      } else {\n        setIsWrongAns(true);\n      }\n    } else {\n      navigation.navigate(viewName);\n    }\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.Pressable, {\n    style: [pressed ? _styles.default.PressedButtonBox : _styles.default.buttonBox, text === _string.STRING.quest_buttonText && {\n      width: '30%'\n    }],\n    onPressIn: function onPressIn() {\n      return setPressed(true);\n    },\n    onPressOut: function onPressOut() {\n      return setPressed(false);\n    },\n    onPress: EnterAns,\n    children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: _styles.default.buttonText,\n      children: text\n    })\n  });\n};\nexports.Button = Button;","map":{"version":3,"names":["Button","text","navigation","viewName","inputAns","ans","setIsWrongAns","tel","userContext","useContext","UserContext","useState","pressed","setPressed","EnterAns","STRING","quest_buttonText","trim","setRecordList","recordList","timer","Linking","openURL","navigate","styles","PressedButtonBox","buttonBox","width","buttonText"],"sources":["C:/Users/user/OneDrive/문서/GitHub/OREH/oreh/components/button.js"],"sourcesContent":["import { useContext, useState } from 'react'\r\nimport { Text, Pressable, Linking } from 'react-native'\r\nimport styles from '../pages/styles.js'\r\nimport UserContext from '../service/UserContext.js'\r\nimport { STRING } from '../string'\r\nexport const Button = ({\r\n  text,\r\n  navigation,\r\n  viewName,\r\n  inputAns,\r\n  ans,\r\n  setIsWrongAns,\r\n  tel,\r\n}) => {\r\n  const userContext = useContext(UserContext)\r\n  const [pressed, setPressed] = useState(false)\r\n  const EnterAns = () => {\r\n    if (text === STRING.quest_buttonText) {\r\n      if (ans === inputAns.trim()) {\r\n        userContext.setRecordList([\r\n          ...userContext.recordList,\r\n          userContext.timer,\r\n        ])\r\n          if(tel){\r\n              Linking.openURL(`tel:07045717849`)\r\n          }\r\n        navigation.navigate(viewName)\r\n      } else {\r\n        setIsWrongAns(true)\r\n      }\r\n    } else {\r\n      navigation.navigate(viewName)\r\n    }\r\n  }\r\n  return (\r\n    <Pressable\r\n      style={[\r\n        pressed ? styles.PressedButtonBox : styles.buttonBox,\r\n        text === STRING.quest_buttonText && { width: '30%' },\r\n      ]}\r\n      onPressIn={() => setPressed(true)}\r\n      onPressOut={() => setPressed(false)}\r\n      onPress={EnterAns}\r\n    >\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n    </Pressable>\r\n  )\r\n}\r\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAkC;AAAA;EAAA;AAC3B,IAAMA,MAAM,GAAG,SAATA,MAAM,OAQb;EAAA,IAPJC,IAAI,QAAJA,IAAI;IACJC,UAAU,QAAVA,UAAU;IACVC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IACRC,GAAG,QAAHA,GAAG;IACHC,aAAa,QAAbA,aAAa;IACbC,GAAG,QAAHA,GAAG;EAEH,IAAMC,WAAW,GAAG,IAAAC,iBAAU,EAACC,oBAAW,CAAC;EAC3C,gBAA8B,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAA;IAAtCC,OAAO;IAAEC,UAAU;EAC1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB,IAAIb,IAAI,KAAKc,cAAM,CAACC,gBAAgB,EAAE;MACpC,IAAIX,GAAG,KAAKD,QAAQ,CAACa,IAAI,EAAE,EAAE;QAC3BT,WAAW,CAACU,aAAa,4CACpBV,WAAW,CAACW,UAAU,IACzBX,WAAW,CAACY,KAAK,GACjB;QACA,IAAGb,GAAG,EAAC;UACHc,oBAAO,CAACC,OAAO,mBAAmB;QACtC;QACFpB,UAAU,CAACqB,QAAQ,CAACpB,QAAQ,CAAC;MAC/B,CAAC,MAAM;QACLG,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,MAAM;MACLJ,UAAU,CAACqB,QAAQ,CAACpB,QAAQ,CAAC;IAC/B;EACF,CAAC;EACD,OACE,qBAAC,sBAAS;IACR,KAAK,EAAE,CACLS,OAAO,GAAGY,eAAM,CAACC,gBAAgB,GAAGD,eAAM,CAACE,SAAS,EACpDzB,IAAI,KAAKc,cAAM,CAACC,gBAAgB,IAAI;MAAEW,KAAK,EAAE;IAAM,CAAC,CACpD;IACF,SAAS,EAAE;MAAA,OAAMd,UAAU,CAAC,IAAI,CAAC;IAAA,CAAC;IAClC,UAAU,EAAE;MAAA,OAAMA,UAAU,CAAC,KAAK,CAAC;IAAA,CAAC;IACpC,OAAO,EAAEC,QAAS;IAAA,UAElB,qBAAC,iBAAI;MAAC,KAAK,EAAEU,eAAM,CAACI,UAAW;MAAA,UAAE3B;IAAI;EAAQ,EACnC;AAEhB,CAAC;AAAA"},"metadata":{},"sourceType":"script"}