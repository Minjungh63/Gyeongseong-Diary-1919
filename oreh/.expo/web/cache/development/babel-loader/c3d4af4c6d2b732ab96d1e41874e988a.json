{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _styles = _interopRequireDefault(require(\"./styles\"));\nvar _button = require(\"../components/button\");\nvar _box = require(\"../components/box\");\nvar _Input = require(\"../components/Input\");\nvar _modal = require(\"../components/modal\");\nvar _head = require(\"../components/head\");\nvar _string = require(\"../string\");\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\OREH\\\\oreh\\\\pages\\\\Quest19View.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n_reactNative.LogBox.ignoreLogs(['Warning: ...']);\n_reactNative.LogBox.ignoreAllLogs();\nvar Quest19View = function Quest19View(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    hintOpen = _useState2[0],\n    setHintOpen = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    isHintFin = _useState4[0],\n    setIsHintFin = _useState4[1];\n  var _useState5 = (0, _react.useState)(false),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    useHint = _useState6[0],\n    setUseHint = _useState6[1];\n  var _useState7 = (0, _react.useState)(true),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    isPop = _useState8[0],\n    setIsPop = _useState8[1];\n  return (0, _jsxRuntime.jsx)(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      height: _reactNative.Dimensions.get('window').height + _reactNative.StatusBar.currentHeight,\n      width: _reactNative.Dimensions.get(\"window\").width\n    },\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    scrollEnabled: false,\n    children: (0, _jsxRuntime.jsx)(_reactNative.ImageBackground, {\n      source: require(\"../assets/background.jpg\"),\n      style: [_styles.default.bgImage, {\n        height: _reactNative.Dimensions.get('screen').height\n      }],\n      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.container,\n        children: [(0, _jsxRuntime.jsx)(_head.Header, {\n          setHintOpen: setHintOpen,\n          setIsHintFin: setIsHintFin,\n          useHint: useHint,\n          setUseHint: setUseHint,\n          timerStart: false,\n          hintBtnHide: true\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            flex: 0.1,\n            alignItems: 'flex-end',\n            justifyContent: 'flex-end',\n            paddingBottom: 10,\n            paddingLeft: 10\n          }\n        }), (0, _jsxRuntime.jsx)(_box.Box, {\n          option: 'quest',\n          hintNum: 'Instruction 19.\\n\\n',\n          text: _string.STRING.quest19\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            flex: 0.05,\n            justifyContent: 'space-around',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: (0, _jsxRuntime.jsx)(_button.Button, {\n            navigation: navigation,\n            text: \"OK\",\n            viewName: 'Quest20View'\n          })\n        }), (0, _jsxRuntime.jsx)(_modal.ModalWindow, {\n          open: isPop,\n          setOpen: setIsPop,\n          text: _string.STRING.pop19,\n          isHint: false,\n          isPop: true\n        })]\n      })\n    })\n  });\n};\nvar _default = Quest19View;\nexports.default = _default;","map":{"version":3,"names":["LogBox","ignoreLogs","ignoreAllLogs","Quest19View","navigation","useState","hintOpen","setHintOpen","isHintFin","setIsHintFin","useHint","setUseHint","isPop","setIsPop","height","Dimensions","get","StatusBar","currentHeight","width","x","y","require","styles","bgImage","container","flex","alignItems","justifyContent","paddingBottom","paddingLeft","STRING","quest19","flexDirection","pop19"],"sources":["C:/Users/user/OneDrive/문서/GitHub/OREH/oreh/pages/Quest19View.js"],"sourcesContent":["LogBox.ignoreLogs(['Warning: ...']) // Ignore log notification by message\r\nLogBox.ignoreAllLogs() //Ignore all log notifications\r\nimport React, { useState } from 'react'\r\nimport { View, Text, LogBox, SafeAreaView, ImageBackground, Dimensions,StatusBar } from 'react-native'\r\nimport styles from './styles'\r\nimport { Button } from '../components/button'\r\nimport { Box } from '../components/box'\r\nimport { Input } from '../components/Input'\r\nimport { ModalWindow } from '../components/modal'\r\nimport { Header } from '../components/head'\r\nimport { STRING } from '../string'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nconst Quest19View = ({ navigation }) => {\r\n  const [hintOpen, setHintOpen] = useState(false)\r\n  const [isHintFin, setIsHintFin] = useState(false)\r\n  const [useHint, setUseHint] = useState(false)\r\n  const [isPop, setIsPop] = useState(true)\r\n  return (\r\n  <KeyboardAwareScrollView contentContainerStyle={{height:Dimensions.get('window').height+StatusBar.currentHeight, width:Dimensions.get(\"window\").width}} resetScrollToCoords={{ x: 0, y: 0 }} scrollEnabled={false}>\r\n    <ImageBackground source={require(\"../assets/background.jpg\")} style={[styles.bgImage,{height:Dimensions.get('screen').height}]} >\r\n    <View style={styles.container}>\r\n      <Header\r\n        setHintOpen={setHintOpen}\r\n        setIsHintFin={setIsHintFin}\r\n        useHint={useHint}\r\n        setUseHint={setUseHint}\r\n        timerStart={false}\r\n        hintBtnHide={true}\r\n      />\r\n      <View\r\n        style={{\r\n          flex: 0.1,\r\n          alignItems:'flex-end',\r\n          justifyContent: 'flex-end',\r\n          paddingBottom: 10,\r\n          paddingLeft: 10,\r\n        }}\r\n      >\r\n      </View>\r\n      <Box option={'quest'} hintNum={'Instruction 19.\\n\\n'} text={STRING.quest19}/>\r\n      <View\r\n        style={{\r\n          flex: 0.05,\r\n          justifyContent: 'space-around',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Button\r\n           navigation={navigation}\r\n           text={\"OK\"}\r\n           viewName={'Quest20View'}\r\n        />\r\n      </View>\r\n      <ModalWindow\r\n        open={isPop}\r\n        setOpen={setIsPop}\r\n        text={STRING.pop19}\r\n        isHint={false}\r\n        isPop={true}\r\n      />\r\n      </View>\r\n      </ImageBackground>\r\n    </KeyboardAwareScrollView>\r\n  )\r\n}\r\n\r\nexport default Quest19View\r\n"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAkF;AAAA;EAAA;AAAA;AAAA;AAXlFA,mBAAM,CAACC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;AACnCD,mBAAM,CAACE,aAAa,EAAE;AAYtB,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC/B,gBAAgC,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAA;IAAxCC,QAAQ;IAAEC,WAAW;EAC5B,iBAAkC,IAAAF,eAAQ,EAAC,KAAK,CAAC;IAAA;IAA1CG,SAAS;IAAEC,YAAY;EAC9B,iBAA8B,IAAAJ,eAAQ,EAAC,KAAK,CAAC;IAAA;IAAtCK,OAAO;IAAEC,UAAU;EAC1B,iBAA0B,IAAAN,eAAQ,EAAC,IAAI,CAAC;IAAA;IAAjCO,KAAK;IAAEC,QAAQ;EACtB,OACA,qBAAC,2DAAuB;IAAC,qBAAqB,EAAE;MAACC,MAAM,EAACC,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF,MAAM,GAACG,sBAAS,CAACC,aAAa;MAAEC,KAAK,EAACJ,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACG;IAAK,CAAE;IAAC,mBAAmB,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAC,aAAa,EAAE,KAAM;IAAA,UAChN,qBAAC,4BAAe;MAAC,MAAM,EAAEC,OAAO,4BAA6B;MAAC,KAAK,EAAE,CAACC,eAAM,CAACC,OAAO,EAAC;QAACV,MAAM,EAACC,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACF;MAAM,CAAC,CAAE;MAAA,UAC/H,sBAAC,iBAAI;QAAC,KAAK,EAAES,eAAM,CAACE,SAAU;QAAA,WAC5B,qBAAC,YAAM;UACL,WAAW,EAAElB,WAAY;UACzB,YAAY,EAAEE,YAAa;UAC3B,OAAO,EAAEC,OAAQ;UACjB,UAAU,EAAEC,UAAW;UACvB,UAAU,EAAE,KAAM;UAClB,WAAW,EAAE;QAAK,EAClB,EACF,qBAAC,iBAAI;UACH,KAAK,EAAE;YACLe,IAAI,EAAE,GAAG;YACTC,UAAU,EAAC,UAAU;YACrBC,cAAc,EAAE,UAAU;YAC1BC,aAAa,EAAE,EAAE;YACjBC,WAAW,EAAE;UACf;QAAE,EAEG,EACP,qBAAC,QAAG;UAAC,MAAM,EAAE,OAAQ;UAAC,OAAO,EAAE,qBAAsB;UAAC,IAAI,EAAEC,cAAM,CAACC;QAAQ,EAAE,EAC7E,qBAAC,iBAAI;UACH,KAAK,EAAE;YACLN,IAAI,EAAE,IAAI;YACVE,cAAc,EAAE,cAAc;YAC9BK,aAAa,EAAE,KAAK;YACpBN,UAAU,EAAE;UACd,CAAE;UAAA,UAEF,qBAAC,cAAM;YACJ,UAAU,EAAEvB,UAAW;YACvB,IAAI,EAAE,IAAK;YACX,QAAQ,EAAE;UAAc;QACzB,EACG,EACP,qBAAC,kBAAW;UACV,IAAI,EAAEQ,KAAM;UACZ,OAAO,EAAEC,QAAS;UAClB,IAAI,EAAEkB,cAAM,CAACG,KAAM;UACnB,MAAM,EAAE,KAAM;UACd,KAAK,EAAE;QAAK,EACZ;MAAA;IACK;EACW,EACM;AAE9B,CAAC;AAAA,eAEc/B,WAAW;AAAA"},"metadata":{},"sourceType":"script"}